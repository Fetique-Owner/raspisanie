from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.enums import ParseMode
import asyncio
import logging
import re
from datetime import datetime
import aiohttp
import json
import sys
import os
from aiogram.client.default import DefaultBotProperties

sys.path.append(os.path.abspath(os.path.dirname(__file__)))

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

bot = Bot(
    token="8398756811:AAHCqsiw1lNJjAf6DWNjweQUwd9yXO6DHMA",
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
async def set_commands():
    await bot.set_my_commands([
        types.BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        types.BotCommand(command="help", description="–ü–æ–º–æ—â—å"),
        types.BotCommand(command="today", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"),
        types.BotCommand(command="tomorrow", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"),
        types.BotCommand(command="week", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"),
        types.BotCommand(command="bells", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"),
        types.BotCommand(command="day", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å"),
        types.BotCommand(command="admin", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
    ])

ADMIN_USER_IDS = [1390197754, 1320788717, 1138387660]

BELL_SCHEDULE = [
    "1Ô∏è‚É£ 8:00 - 8:30",
    "2Ô∏è‚É£ 8:45 - 9:25",
    "–∑–∞–≤—Ç—Ä–∞–∫",
    "3Ô∏è‚É£ 9:40 - 10:20",
    "4Ô∏è‚É£ 10:30 - 11:10",
    "5Ô∏è‚É£ 11:25 - 12:05",
    "–æ–±–µ–¥",
    "6Ô∏è‚É£ 12:20 - 13:00",
    "7Ô∏è‚É£ 13:10 - 13:50",
    "8Ô∏è‚É£ 14:00 - 14:40",
    "9Ô∏è‚É£ 14:50 - 15:30",
]

BELL_SCHEDULE1 = [
    "1Ô∏è‚É£ 8:00 - 8:40",
    "2Ô∏è‚É£ 8:55 - 9:35",
    "–∑–∞–≤—Ç—Ä–∞–∫", 
    "3Ô∏è‚É£ 9:50 - 10:30",
    "4Ô∏è‚É£ 10:40 - 11:20",
    "5Ô∏è‚É£ 11:35 - 12:15",
    "–æ–±–µ–¥",
    "6Ô∏è‚É£ 12:30 - 13:10",
    "7Ô∏è‚É£ 13:20 - 14:00",
    "8Ô∏è‚É£ 14:10 - 14:50",
    "9Ô∏è‚É£ 15:00 - 15:40"
]



# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
SCHEDULE_FILE = os.path.join(os.path.dirname(__file__), "schedule.json")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ
def load_schedule():
    try:
        if os.path.exists(SCHEDULE_FILE):
            with open(SCHEDULE_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")
    return {
    "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": ["1.üìö –†–∞–∑–≥–æ–≤–æ—Ä –æ –≤–∞–∂–Ω–æ–º 13 - 8:00 - 8:30", "2.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 11 - 8:45 - 9:25", "3.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–üR) 11 - 9:40 - 10:20", "4.üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ - 10:30 - 11:10", "5.üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ - 11:25- 12:05", "6.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 12:20 - 13:00", "7.üìö –ò—Å—Ç–æ—Ä–∏—è (–ë) 37 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 11 - 13:10 - 13:50", "8.üìö –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 14:00 - 14:40"],
    "–≤—Ç–æ—Ä–Ω–∏–∫": ["1.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –•–∏–º–∏—è (–ü–†) 44 - 8:00 - 8:40", "2.üß™ –•–∏–º–∏—è (–ë) 44 / –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 35 - 8:55 - 9:35", "3.üåç –ì–µ–æ–≥—Ä–∞—Ñ–∏—è 42 - 9:50 - 10:30", "4.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 41 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 - 10:40 - 11:20", "5.üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (–ë) 36 - 11:35 - 12:15", "6.üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) / –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 - 12:30 - 13:10", "7.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / —ç–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ 11/1 - 13:20 - 14:00"],
    "—Å—Ä–µ–¥–∞": ["1.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 31 - 8:00 - 8:40", "2.üìö –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 13 - 8:55 - 9:35", "3.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 9:50 - 10:30", "4.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 10:40 - 11:20", "5.üìö –ò—Å—Ç–æ—Ä–∏—è (–ë) 35 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 11:35 - 12:15", "6.üìö –û–ë–ó–† 42 - 13:30 - 13:10", "7.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 44 - 13:20 - 14:00", "8.üî≠ –§–∏–∑–∏–∫–∞ (–ë) 38 / –≠–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–ü–†) 12 - 14:10 - 14:50"],
    "—á–µ—Ç–≤–µ—Ä–≥": ["1.üìö –†–æ—Å—Å–∏—è - –º–æ–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã 13 - 8:00 - 8:30", "2.üìö –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ë) 37 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 - 8:45 - 9:25", "3.üìö –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 13 - 9:40 - 10:20", "4.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 10:30 - 11:10", "5.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 - 11:25 - 12:05", "6.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) - 12:20 - 13:00", "7.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) - 13:10 - 13:50", "8.üìö –≠–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–ë) - 14:00 - 14:40"],
    "–ø—è—Ç–Ω–∏—Ü–∞": ["1.üìö –•–∏–º–∏—è (–ü–†) 44 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 8:00 - 8:40", "2.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 11 - 8:55 - 9:35", "3.üî≠ –§–∏–∑–∏–∫–∞ (–ë) - 9:50 - 10:30", "4.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ë) - 10:40 - 11:20", "5.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 11:35 - 12:15", "6.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 12:30 - 13:10", "7.üìö –≠–ª. –∫—É—Ä—Å –ø–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ - 13:20 - 14:40", "8.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 / –•–∏–º–∏—è (–ü–†) 44 - 14:10 - 14:50"],
    "—Å—É–±–±–æ—Ç–∞": ["–í—ã—Ö–æ–¥–Ω–æ–π! –ë—É—Ö–∞–µ–º! üéâ"],
    "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": ["–ü–æ–≤—Ç–æ—Ä—è–µ–º —Å—É–±–±–æ—Ç—É! üéâ"]
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —Ñ–∞–π–ª
def save_schedule():
    try:
        with open(SCHEDULE_FILE, 'w', encoding='utf-8') as f:
            json.dump(schedule, f, ensure_ascii=False, indent=2)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
schedule = load_schedule()

def get_current_day():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"""
    try:
        days = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
        return days[datetime.now().weekday()]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ get_current_day: {e}")
        return "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"

def get_tomorrow_day():
    """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"""
    try:
        days = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
        tomorrow_index = (datetime.now().weekday() + 1) % 7
        return days[tomorrow_index]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ get_tomorrow_day: {e}")
        return "–≤—Ç–æ—Ä–Ω–∏–∫"

def extract_day_from_text(text):
    """–ò–∑–≤–ª–µ—á—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    days_pattern = r'\b(–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫|–≤—Ç–æ—Ä–Ω–∏–∫|—Å—Ä–µ–¥–∞|—á–µ—Ç–≤–µ—Ä–≥|–ø—è—Ç–Ω–∏—Ü–∞|—Å—É–±–±–æ—Ç–∞|–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)\b'
    match = re.search(days_pattern, text)
    return match.group(0) if match else None

@dp.message(Command("start", "help"))
async def send_welcome(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help"""
    try:
        welcome_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∏–π.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start, /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/today - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
/tomorrow - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞  
/week - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é
/day [–¥–µ–Ω—å] - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
/bells - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤

üìã –ò–ª–∏ –Ω–∞–ø–∏—à–∏ –º–Ω–µ:
‚Ä¢ "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"
‚Ä¢ "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
‚Ä¢ "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" (–∏–ª–∏ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å)
‚Ä¢ "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"
‚Ä¢ "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"

"""
        await message.reply(welcome_text)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except aiohttp.ClientConnectorError:
        logger.warning("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_welcome: {e}")

@dp.message(Command("bells"))
async def schedule_bells(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /bells"""
    try:
        response = "üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, —á–µ—Ç–≤–µ—Ä–≥:\n\n" + "\n".join(BELL_SCHEDULE)
        response += "\n\nüîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫, —Å—Ä–µ–¥—É, –ø—è—Ç–Ω–∏—Ü—É:\n\n" + "\n".join(BELL_SCHEDULE1)
        await message.reply(response)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ schedule_bells: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤")

@dp.message(Command("today"))
async def schedule_today(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /today"""
    try:
        day = get_current_day()
        lessons = schedule.get(day, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
        response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ({day.capitalize()}):\n\n" + "\n".join(lessons)
        await message.reply(response)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ schedule_today: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("tomorrow"))
async def schedule_tomorrow(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tomorrow"""
    try:
        day = get_tomorrow_day()
        lessons = schedule.get(day, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
        response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ({day.capitalize()}):\n\n" + "\n".join(lessons)
        await message.reply(response)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ schedule_tomorrow: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("week"))
async def schedule_week(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /week"""
    try:
        response = "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n\n"
        for day, lessons in schedule.items():
            response += f"üìå {day.capitalize()}:\n"
            response += "\n".join(lessons) + "\n\n"
        await message.reply(response)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ schedule_week: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("day"))
async def schedule_day(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /day"""
    try:
        args = message.text.split()
        if len(args) < 2:
            await message.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /day\n–ù–∞–ø—Ä–∏–º–µ—Ä: /day –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
            return
        
        day_name = args[1].lower()
        if day_name not in schedule:
            await message.reply("‚ùå –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –≤—Ç–æ—Ä–Ω–∏–∫, —Å—Ä–µ–¥–∞, —á–µ—Ç–≤–µ—Ä–≥, –ø—è—Ç–Ω–∏—Ü–∞, —Å—É–±–±–æ—Ç–∞, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ")
            return
        
        lessons = schedule.get(day_name, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
        response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_name.capitalize()}:\n\n" + "\n".join(lessons)
        await message.reply(response)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ schedule_day: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("edit_schedule"))
async def edit_schedule_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        if message.from_user.id not in ADMIN_USER_IDS:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
            return
        
        help_text = """
üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:
/edit –¥–µ–Ω—å –Ω–æ–º–µ—Ä_—É—Ä–æ–∫–∞ –Ω–æ–≤—ã–π_—É—Ä–æ–∫

–ü—Ä–∏–º–µ—Ä:
/edit –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 3 üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
/edit –≤—Ç–æ—Ä–Ω–∏–∫ 5 üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∞ 12:30

‚ùó –£—Ä–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç –Ω–æ–º–µ—Ä, –Ω–µ –ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –Ω–∞—á–∞–ª–µ!
        """
        await message.reply(help_text)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ edit_schedule_command: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@dp.message(Command("edit"))
async def edit_schedule(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        if message.from_user.id not in ADMIN_USER_IDS:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
            return
        
        args = message.text.split(maxsplit=3)
        if len(args) < 4:
            await message.reply("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /edit –¥–µ–Ω—å –Ω–æ–º–µ—Ä –Ω–æ–≤—ã–π_—É—Ä–æ–∫")
            return
        
        day_name = args[1].lower()
        lesson_num = args[2]
        new_lesson = args[3]
        
        if day_name not in schedule:
            await message.reply("‚ùå –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        try:
            lesson_index = int(lesson_num) - 1
            if 0 <= lesson_index < len(schedule[day_name]):
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –∫ —É—Ä–æ–∫—É
                numbered_lesson = f"{lesson_num}.{new_lesson}"
                schedule[day_name][lesson_index] = numbered_lesson
                save_schedule()
                await message.reply(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_name} –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n–£—Ä–æ–∫ {lesson_num}: {new_lesson}")
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ–±–Ω–æ–≤–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {day_name} —É—Ä–æ–∫ {lesson_num}")
            else:
                await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞")
        except ValueError:
            await message.reply("‚ùå –ù–æ–º–µ—Ä —É—Ä–æ–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ edit_schedule: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("reset_schedule"))
async def reset_schedule(message: types.Message):
    """–°–±—Ä–æ—Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É"""
    try:
        if message.from_user.id not in ADMIN_USER_IDS:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
            return
        
        global schedule
        schedule = {
            "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": ["1.üìö –†–∞–∑–≥–æ–≤–æ—Ä –æ –≤–∞–∂–Ω–æ–º 13 - 8:00 - 8:30", "2.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 11 - 8:45 - 9:25", "3.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–üR) 11 - 9:40 - 10:20", "4.üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ - 10:30 - 11:10", "5.üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ - 11:25- 12:05", "6.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 12:20 - 13:00", "7.üìö –ò—Å—Ç–æ—Ä–∏—è (–ë) 37 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 11 - 13:10 - 13:50", "8.üìö –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 14:00 - 14:40"],
            "–≤—Ç–æ—Ä–Ω–∏–∫": ["1.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –•–∏–º–∏—è (–ü–†) 44 - 8:00 - 8:40", "2.üß™ –•–∏–º–∏—è (–ë) 44 / –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 35 - 8:55 - 9:35", "3.üåç –ì–µ–æ–≥—Ä–∞—Ñ–∏—è 42 - 9:50 - 10:30", "4.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 41 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 - 10:40 - 11:20", "5.üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (–ë) 36 - 11:35 - 12:15", "6.üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) / –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 - 12:30 - 13:10", "7.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / —ç–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ 11/1 - 13:20 - 14:00"],
            "—Å—Ä–µ–¥–∞": ["1.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 31 - 8:00 - 8:40", "2.üìö –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 13 - 8:55 - 9:35", "3.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 9:50 - 10:30", "4.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 10:40 - 11:20", "5.üìö –ò—Å—Ç–æ—Ä–∏—è (–ë) 35 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 11:35 - 12:15", "6.üìö –û–ë–ó–† 42 - 13:30 - 13:10", "7.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ü–†) 44 - 13:20 - 14:00", "8.üî≠ –§–∏–∑–∏–∫–∞ (–ë) 38 / –≠–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–ü–†) 12 - 14:10 - 14:50"],
            "—á–µ—Ç–≤–µ—Ä–≥": ["1.üìö –†–æ—Å—Å–∏—è - –º–æ–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã 13 - 8:00 - 8:30", "2.üìö –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ë) 37 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 - 8:45 - 9:25", "3.üìö –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 13 - 9:40 - 10:20", "4.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 10:30 - 11:10", "5.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 - 11:25 - 12:05", "6.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) - 12:20 - 13:00", "7.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (109) - 13:10 - 13:50", "8.üìö –≠–ª.–∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–ë) - 14:00 - 14:40"],
            "–ø—è—Ç–Ω–∏—Ü–∞": ["1.üìö –•–∏–º–∏—è (–ü–†) 44 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 12 / –ò—Å—Ç–æ—Ä–∏—è (–ü–†) 32 - 8:00 - 8:40", "2.üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ë) 36 / –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü–†) 11 - 8:55 - 9:35", "3.üî≠ –§–∏–∑–∏–∫–∞ (–ë) - 9:50 - 10:30", "4.üî≠ –ë–∏–æ–ª–æ–≥–∏—è (–ë) - 10:40 - 11:20", "5.üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 13 - 11:35 - 12:15", "6.üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 22 - 12:30 - 13:10", "7.üìö –≠–ª. –∫—É—Ä—Å –ø–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ - 13:20 - 14:40", "8.üî≠ –§–∏–∑–∏–∫–∞ (–ü–†) 38 / –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (–ü–†) 32 / –•–∏–º–∏—è (–ü–†) 44 - 14:10 - 14:50"],
            "—Å—É–±–±–æ—Ç–∞": ["–í—ã—Ö–æ–¥–Ω–æ–π! –ë—É—Ö–∞–µ–º! üéâ"],
            "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": ["–ü–æ–≤—Ç–æ—Ä—è–µ–º —Å—É–±–±–æ—Ç—É! üéâ"]
        }
        save_schedule()
        await message.reply("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É!")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —Å–±—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ reset_schedule: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

@dp.message(Command("admin"))
async def admin_commands(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    try:
        if message.from_user.id not in ADMIN_USER_IDS:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            return
        
        admin_text = """
üë®‚Äçüíº –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:

/edit_schedule - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
/edit > –¥–µ–Ω—å > –Ω–æ–º–µ—Ä > –Ω–æ–≤—ã–π_—É—Ä–æ–∫ - –∏–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–∫
/reset_schedule - —Å–±—Ä–æ—Å–∏—Ç—å –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é

–ü—Ä–∏–º–µ—Ä—ã:
/edit –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 3 üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
/edit –≤—Ç–æ—Ä–Ω–∏–∫ 5 üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞
        """
        await message.reply(admin_text)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ admin_commands: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@dp.message()
async def handle_text_messages(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        text = message.text.lower().strip()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.id}: {text}")
        
        response = None
        
        if re.match(r'^(–∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞|–∑–∞–≤—Ç—Ä–∞—à–Ω–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ)$', text):
            day = get_tomorrow_day()
            lessons = schedule.get(day, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
            response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ({day.capitalize()}):\n\n" + "\n".join(lessons)
            
        elif re.match(r'^(–∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è|—Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ)$', text):
            day = get_current_day()
            lessons = schedule.get(day, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
            response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ({day.capitalize()}):\n\n" + "\n".join(lessons)
            
        elif re.match(r'^(–∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é|–ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ)$', text):
            response = "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n\n"
            for day, lessons in schedule.items():
                response += f"üìå {day.capitalize()}:\n"
                response += "\n".join(lessons) + "\n\n"
        
        elif re.match(r'^–∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫|–≤—Ç–æ—Ä–Ω–∏–∫|—Å—Ä–µ–¥–∞|—á–µ—Ç–≤–µ—Ä–≥|–ø—è—Ç–Ω–∏—Ü–∞|—Å—É–±–±–æ—Ç–∞|–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)$', text):
            specific_day = extract_day_from_text(text)
            if specific_day:
                 lessons = schedule.get(specific_day, ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"])
                 response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {specific_day.capitalize()}:\n\n" + "\n".join(lessons)
        
        elif re.match(r'^(—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤|–∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤|–∑–≤–æ–Ω–∫–∏)$', text):
            response = "üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, —á–µ—Ç–≤–µ—Ä–≥:\n\n" + "\n".join(BELL_SCHEDULE)
            response += "\n\nüîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏:\n\n" + "\n".join(BELL_SCHEDULE1)
        
        if response:
            await message.reply(response)
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        else:
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {text}")
        
    except aiohttp.ClientConnectorError:
        logger.warning("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_text_messages: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    await set_commands()
    
    for admin_id in ADMIN_USER_IDS:
        try:
            await bot.send_message(admin_id, "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Heroku!")
        except:
            pass
    
    while True:
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            await dp.start_polling(bot, skip_updates=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(10)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")